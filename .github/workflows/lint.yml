name: lint

on: [push, pull_request, workflow_dispatch]

jobs:

  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run static analysis on bleeding and trailing edges
        python-version: [ '3.8', '3.10', '3.12' ]
        django-version:
          - '3.2' # LTS April 2024
          - '4.2' # LTS April 2026
          - '5.1' # December 2025
        exclude:
          - python-version: '3.8'
            django-version: '5.1'
          - python-version: '3.10'
            django-version: '5.1'
          - python-version: '3.12'
            django-version: '3.2'
          - python-version: '3.10'
            django-version: '3.2'
          - python-version: '3.8'
            django-version: '4.2'
          - python-version: '3.12'
            django-version: '4.2'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install pipx
          pipx ensurepath
          pipx install poetry
          poetry config --local virtualenvs.create true
          poetry config --local virtualenvs.in-project true
          poetry env use python
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          sed -i 's/^python = .*/python = "^${{ matrix.python-version }}"/' pyproject.toml
          poetry add django@^${{ matrix.django-version }}
          poetry install --no-interaction -E all --with psycopg2

      - name: Run Static Analysis
        run: |
          source .venv/bin/activate
          ./check.sh --no-fix
          python -m readme_renderer ./README.md -o /tmp/README.html
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
