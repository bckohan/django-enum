# Generated by Django 4.2.15 on 2024-08-27 20:29

from django.db import migrations, models
import django_enum.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FlagConstraintTestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keep', django_enum.fields.SmallIntegerFlagField(blank=True, choices=[(4096, 'VAL1'), (8192, 'VAL2'), (16384, 'VAL3')], default=None, null=True)),
                ('eject', django_enum.fields.SmallIntegerFlagField(blank=True, choices=[(4096, 'VAL1'), (8192, 'VAL2'), (16384, 'VAL3')], default=0)),
                ('eject_non_strict', django_enum.fields.SmallIntegerFlagField(blank=True, choices=[(4096, 'VAL1'), (8192, 'VAL2'), (16384, 'VAL3')], default=0)),
                ('conform', django_enum.fields.SmallIntegerFlagField(blank=True, choices=[(4096, 'VAL1'), (8192, 'VAL2'), (16384, 'VAL3')], default=None, null=True)),
                ('strict', django_enum.fields.SmallIntegerFlagField(blank=True, choices=[(4096, 'VAL1'), (8192, 'VAL2'), (16384, 'VAL3')], default=None, null=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name='flagconstrainttestmodel',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('eject__gte', 4096), ('eject__lte', 28672)), ('eject', 0), _connector='OR'), name='sts_flag_constraints_FlagConstraintTestModel_eject_EjectFlagEnum'),
        ),
        migrations.AddConstraint(
            model_name='flagconstrainttestmodel',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('conform__gte', 4096), ('conform__lte', 28672)), ('conform', 0), ('conform__isnull', True), _connector='OR'), name='flag_constraints_FlagConstraintTestModel_conform_ConformFlagEnum'),
        ),
        migrations.AddConstraint(
            model_name='flagconstrainttestmodel',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('strict__gte', 4096), ('strict__lte', 28672)), ('strict', 0), ('strict__isnull', True), _connector='OR'), name='s_flag_constraints_FlagConstraintTestModel_strict_StrictFlagEnum'),
        ),
    ]
